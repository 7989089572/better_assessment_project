{"ast":null,"code":"var _jsxFileName = \"H:\\\\better_assessment_project\\\\frontend\\\\src\\\\components\\\\CommentsSection.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CommentsSection({\n  taskId\n}) {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [author, setAuthor] = useState('');\n  const [content, setContent] = useState('');\n  const [editingId, setEditingId] = useState(null);\n  const apiBase = 'http://localhost:5000/api';\n  useEffect(() => {\n    fetchComments();\n  }, [taskId]);\n  async function fetchComments() {\n    const res = await fetch(`${apiBase}/comments?task_id=${taskId}`);\n    const data = await res.json();\n    setComments(data);\n  }\n  async function handleAdd(e) {\n    e.preventDefault();\n    const res = await fetch(`${apiBase}/comments`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        task_id: taskId,\n        author,\n        content\n      })\n    });\n    if (res.ok) {\n      setAuthor('');\n      setContent('');\n      fetchComments();\n    }\n  }\n  async function handleDelete(id) {\n    if (!window.confirm('Delete comment?')) return;\n    const res = await fetch(`${apiBase}/comments/${id}`, {\n      method: 'DELETE'\n    });\n    if (res.ok) fetchComments();\n  }\n  async function startEdit(c) {\n    setEditingId(c.id);\n    setAuthor(c.author);\n    setContent(c.content);\n  }\n  async function submitEdit(e) {\n    e.preventDefault();\n    const res = await fetch(`${apiBase}/comments/${editingId}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        author,\n        content\n      })\n    });\n    if (res.ok) {\n      setEditingId(null);\n      setAuthor('');\n      setContent('');\n      fetchComments();\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: comments.map(c => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: c.author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), \": \", c.content, /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => startEdit(c),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDelete(c.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, c.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: editingId ? submitEdit : handleAdd,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Author\",\n        value: author,\n        onChange: e => setAuthor(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Content\",\n        value: content,\n        onChange: e => setContent(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: editingId ? 'Save' : 'Add'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), editingId && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => {\n          setEditingId(null);\n          setAuthor('');\n          setContent('');\n        },\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(CommentsSection, \"BMR235fQ/ppzlTkrlNn4/WMF6vE=\");\n_c = CommentsSection;\nvar _c;\n$RefreshReg$(_c, \"CommentsSection\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","CommentsSection","taskId","_s","comments","setComments","author","setAuthor","content","setContent","editingId","setEditingId","apiBase","fetchComments","res","fetch","data","json","handleAdd","e","preventDefault","method","headers","body","JSON","stringify","task_id","ok","handleDelete","id","window","confirm","startEdit","c","submitEdit","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","onSubmit","placeholder","value","onChange","target","required","type","_c","$RefreshReg$"],"sources":["H:/better_assessment_project/frontend/src/components/CommentsSection.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\n\nexport default function CommentsSection({taskId}){\n  const [comments, setComments] = useState([]);\n  const [author, setAuthor] = useState('');\n  const [content, setContent] = useState('');\n  const [editingId, setEditingId] = useState(null);\n  const apiBase = 'http://localhost:5000/api';\n\n  useEffect(()=>{ fetchComments(); }, [taskId]);\n\n  async function fetchComments(){\n    const res = await fetch(`${apiBase}/comments?task_id=${taskId}`);\n    const data = await res.json();\n    setComments(data);\n  }\n\n  async function handleAdd(e){\n    e.preventDefault();\n    const res = await fetch(`${apiBase}/comments`, {\n      method: 'POST',\n      headers: {'Content-Type':'application/json'},\n      body: JSON.stringify({task_id: taskId, author, content})\n    });\n    if (res.ok){ setAuthor(''); setContent(''); fetchComments(); }\n  }\n\n  async function handleDelete(id){\n    if (!window.confirm('Delete comment?')) return;\n    const res = await fetch(`${apiBase}/comments/${id}`, {method:'DELETE'});\n    if (res.ok) fetchComments();\n  }\n\n  async function startEdit(c){\n    setEditingId(c.id);\n    setAuthor(c.author);\n    setContent(c.content);\n  }\n\n  async function submitEdit(e){\n    e.preventDefault();\n    const res = await fetch(`${apiBase}/comments/${editingId}`, {\n      method:'PUT',\n      headers:{'Content-Type':'application/json'},\n      body:JSON.stringify({author, content})\n    });\n    if (res.ok){ setEditingId(null); setAuthor(''); setContent(''); fetchComments(); }\n  }\n\n  return (\n    <div>\n      <h3>Comments</h3>\n      <ul>\n        {comments.map(c => (\n          <li key={c.id}>\n            <strong>{c.author}</strong>: {c.content}\n            <div>\n              <button onClick={()=>startEdit(c)}>Edit</button>\n              <button onClick={()=>handleDelete(c.id)}>Delete</button>\n            </div>\n          </li>\n        ))}\n      </ul>\n      <form onSubmit={editingId ? submitEdit : handleAdd}>\n        <input placeholder='Author' value={author} onChange={e=>setAuthor(e.target.value)} required />\n        <input placeholder='Content' value={content} onChange={e=>setContent(e.target.value)} required />\n        <button type='submit'>{editingId ? 'Save' : 'Add'}</button>\n        {editingId && <button type='button' onClick={()=>{setEditingId(null); setAuthor(''); setContent('');}}>Cancel</button>}\n      </form>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}